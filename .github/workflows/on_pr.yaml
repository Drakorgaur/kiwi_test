on:
  pull_request:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - uses: actions/checkout@v4
      - name: Try to build
        working-directory: ./app
        run: docker build .
        # here can be continuation with pushing to the registry
  unit-tests:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.11" ]
        poetry-version: [ "1.8.3" ]
        os: [ ubuntu-22.04 ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install tests dependencies
        working-directory: ./app
        run: poetry install --with tests
      - name: Test
        working-directory: ./app
        run: poetry run python3 -m unittest -v tests/unit/test_*.py
  integration_tests:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.11" ]
        poetry-version: [ "1.8.3" ]
        os: [ ubuntu-22.04 ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install tests dependencies
        working-directory: ./app
        run: poetry install --with tests
      - name: Try to build
        working-directory: ./app
        run: docker build . -t application
      - name: store env var for docker image
        run: echo "TESTCONTAINERS_API_IMAGE=application" >> $GITHUB_ENV
      - name: store env var for project directory
        run: echo "TESTCONTAINERS_PROJECT_DIR=$(pwd)" >> $GITHUB_ENV
      - name: Test
        working-directory: ./app
        run: poetry run python3 -m unittest tests/integration/test_*.py
